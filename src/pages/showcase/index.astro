---
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import { getServerTranslation } from '~/i18n';
import { getCollection } from 'astro:content';

// Static site: use default language
const lang = 'en';
const t = getServerTranslation(lang);

const showcases = await getCollection('showcase', ({ data }) => data.draft !== true);
const featuredShowcases = showcases.filter((item) => item.data.featured);
const sortedShowcases = showcases.sort(
  (a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime()
);

const metadata = {
  title: t('pages.showcase.title'),
  description: t('pages.showcase.description'),
};
---

<Layout metadata={metadata}>
  <!-- Hero Section -->
  <Hero>
    <Fragment slot="title">
      <span data-i18n="pages.showcase.heroTitle">{t('pages.showcase.heroTitle')}</span>
    </Fragment>
    <Fragment slot="subtitle">
      <span data-i18n="pages.showcase.heroSubtitle">{t('pages.showcase.heroSubtitle')}</span>
    </Fragment>
  </Hero>

  <!-- Featured Showcases -->
  {
    featuredShowcases.length > 0 && (
      <section class="px-4 py-16 mx-auto max-w-7xl lg:px-8 lg:py-20">
        <div class="mb-12 text-center">
          <h2
            class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl"
            data-i18n="pages.showcase.featuredProjects"
          >
            {t('pages.showcase.featuredProjects')}
          </h2>
          <p class="mt-4 text-lg text-gray-600 dark:text-gray-300" data-i18n="pages.showcase.featuredDesc">
            {t('pages.showcase.featuredDesc')}
          </p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-16">
          {featuredShowcases.slice(0, 2).map((showcase) => (
            <article class="bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden">
              {showcase.data.image && (
                <img
                  src={showcase.data.image.replace('@assets', '/assets')}
                  alt={showcase.data.title}
                  class="w-full h-64 object-cover"
                  loading="lazy"
                  decoding="async"
                />
              )}

              <div class="p-8">
                <div class="flex items-center justify-between mb-4">
                  <span
                    class="inline-block px-3 py-1 text-sm bg-purple-100 text-purple-800 rounded-full dark:bg-purple-900 dark:text-purple-200"
                    data-i18n="pages.showcase.featured"
                  >
                    {t('pages.showcase.featured')}
                  </span>
                  <time class="text-sm text-gray-500 dark:text-gray-400">
                    {new Date(showcase.data.publishDate).toLocaleDateString()}
                  </time>
                </div>

                <h3 class="text-2xl font-bold mb-4 dark:text-white">
                  <a
                    href={`/showcase/${showcase.data.slug || showcase.id}`}
                    class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                  >
                    {showcase.data.title}
                  </a>
                </h3>

                <p class="text-gray-600 dark:text-gray-300 mb-6">{showcase.data.description}</p>

                {/* Tags */}
                {showcase.data.tags && showcase.data.tags.length > 0 && (
                  <div class="flex flex-wrap gap-2">
                    {showcase.data.tags.slice(0, 4).map((tag: string) => (
                      <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded dark:bg-gray-700 dark:text-gray-400">
                        {tag}
                      </span>
                    ))}
                    {showcase.data.tags.length > 4 && (
                      <span class="px-2 py-1 text-xs text-gray-500 dark:text-gray-400">
                        +{showcase.data.tags.length - 4}
                      </span>
                    )}
                  </div>
                )}
              </div>
            </article>
          ))}
        </div>
      </section>
    )
  }

  <!-- All Showcases -->
  <section class="px-4 py-16 mx-auto max-w-7xl lg:px-8 lg:py-20 bg-gray-50 dark:bg-gray-900">
    <div class="mb-12 text-center">
      <h2
        class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl"
        data-i18n="pages.showcase.allProjects"
      >
        {t('pages.showcase.allProjects')}
      </h2>
      <p class="mt-4 text-lg text-gray-600 dark:text-gray-300" data-i18n="pages.showcase.allProjectsDesc">
        {t('pages.showcase.allProjectsDesc')}
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        sortedShowcases.map((showcase) => (
          <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow overflow-hidden">
            {showcase.data.image && (
              <img
                src={showcase.data.image.replace('@assets', '/assets')}
                alt={showcase.data.title}
                class="w-full h-48 object-cover"
                loading="lazy"
                decoding="async"
              />
            )}

            <div class="p-6">
              <div class="flex items-center justify-between mb-3">
                {showcase.data.featured && (
                  <span
                    class="inline-block px-2 py-1 text-xs bg-purple-100 text-purple-800 rounded-full dark:bg-purple-900 dark:text-purple-200"
                    data-i18n="pages.showcase.featured"
                  >
                    {t('pages.showcase.featured')}
                  </span>
                )}
                <time class="text-sm text-gray-500 dark:text-gray-400">
                  {new Date(showcase.data.publishDate).toLocaleDateString()}
                </time>
              </div>

              <h3 class="text-xl font-bold mb-3 dark:text-white">
                <a
                  href={`/showcase/${showcase.data.slug || showcase.id}`}
                  class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                >
                  {showcase.data.title}
                </a>
              </h3>

              <p class="text-gray-600 dark:text-gray-300 mb-4 text-sm line-clamp-2">{showcase.data.description}</p>

              {/* Tags */}
              {showcase.data.tags && showcase.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-4">
                  {showcase.data.tags.slice(0, 3).map((tag: string) => (
                    <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded dark:bg-gray-700 dark:text-gray-400">
                      {tag}
                    </span>
                  ))}
                  {showcase.data.tags.length > 3 && (
                    <span class="px-2 py-1 text-xs text-gray-500 dark:text-gray-400">
                      +{showcase.data.tags.length - 3}
                    </span>
                  )}
                </div>
              )}
            </div>
          </article>
        ))
      }
    </div>

    {
      sortedShowcases.length === 0 && (
        <div class="text-center py-12">
          <div class="text-gray-500 dark:text-gray-400">
            <svg class="mx-auto h-12 w-12 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
              />
            </svg>
            <h3 class="text-lg font-medium mb-2" data-i18n="pages.showcase.noShowcasesYet">
              {t('pages.showcase.noShowcasesYet')}
            </h3>
            <p class="text-sm" data-i18n="pages.showcase.checkBackSoon">
              {t('pages.showcase.checkBackSoon')}
            </p>
          </div>
        </div>
      )
    }
  </section>
</Layout>
