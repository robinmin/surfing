---
import { getCollection, type CollectionEntry } from 'astro:content';

import ExternalPageLayout from '~/layouts/ExternalPageLayout.astro';

export async function getStaticPaths() {
  const cheatsheets = await getCollection('cheatsheets', ({ data }) => !data.draft);

  return cheatsheets.map((cheatsheet) => ({
    params: {
      slug: cheatsheet.data.slug || cheatsheet.id,
    },
    props: { cheatsheet },
  }));
}

interface Props {
  cheatsheet: CollectionEntry<'cheatsheets'>;
}

const { cheatsheet } = Astro.props;

// For cheatsheets, use raw body content since it's already HTML
// The body contains raw HTML that should not be processed as markdown
const renderedContent = cheatsheet.body;

// Merge custom metadata with defaults
const metadata = {
  title: cheatsheet.data.metadata?.title || cheatsheet.data.title,
  description: cheatsheet.data.metadata?.description || cheatsheet.data.description,
  canonical: `${Astro.site}cheatsheets/${cheatsheet.data.slug || cheatsheet.id}`,
  robots: {
    index: true,
    follow: true,
    ...cheatsheet.data.metadata?.robots,
  },
  ...cheatsheet.data.metadata,
  openGraph: {
    type: 'article',
    ...(cheatsheet.data.image && { images: [{ url: cheatsheet.data.image }] }),
    ...cheatsheet.data.metadata?.openGraph,
  },
};

// Language selector configuration for detail pages
const languageSelectorConfig = {
  translations: cheatsheet.data.translations || ['en'],
  isDetailPage: true,
  collectionName: 'cheatsheets',
};
---

<ExternalPageLayout metadata={metadata} entry={cheatsheet} languageSelectorConfig={languageSelectorConfig}>
  <div set:html={renderedContent} />
</ExternalPageLayout>
