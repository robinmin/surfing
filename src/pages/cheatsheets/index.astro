---
import { getCollection } from 'astro:content';
import { Icon } from 'astro-icon/components';
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import { getServerTranslation } from '~/i18n';

function extractLanguageFromId(id: string): string {
  const match = id.match(/^([a-z]{2})\//);
  return match ? match[1] : 'en';
}

// Static site: use default language
const lang = 'en';
const t = getServerTranslation(lang);

// Get all cheatsheets (NO server-side filtering for static build - client will filter)
const cheatsheets = await getCollection('cheatsheets', ({ data }) => !data.draft);

const featuredCheatsheets = cheatsheets.filter((item) => item.data.featured);
const sortedCheatsheets = cheatsheets.sort(
  (a, b) =>
    new Date(b.data.publishDate || b.data.updateDate || 0).getTime() -
    new Date(a.data.publishDate || a.data.updateDate || 0).getTime()
);

const metadata = {
  title: t('pages.cheatsheets.title'),
  description: t('pages.cheatsheets.description'),
};
---

<Layout metadata={metadata}>
  <!-- Hero Section -->
  <Hero>
    <Fragment slot="title">
      <span data-i18n="pages.cheatsheets.heroTitle">{t('pages.cheatsheets.heroTitle')}</span>
    </Fragment>
    <Fragment slot="subtitle">
      <span data-i18n="pages.cheatsheets.heroSubtitle">{t('pages.cheatsheets.heroSubtitle')}</span>
    </Fragment>
  </Hero>

  <!-- Featured Cheatsheets -->
  {
    featuredCheatsheets.length > 0 && (
      <section class="px-4 py-16 mx-auto max-w-7xl lg:px-8 lg:py-20">
        <div class="mb-12 text-center">
          <h2
            class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl"
            data-i18n="pages.cheatsheets.featuredCheatsheets"
          >
            {t('pages.cheatsheets.featuredCheatsheets')}
          </h2>
          <p class="mt-4 text-lg text-gray-600 dark:text-gray-300" data-i18n="pages.cheatsheets.featuredDesc">
            {t('pages.cheatsheets.featuredDesc')}
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {featuredCheatsheets.slice(0, 6).map((cheatsheet) => (
            <article class="group" data-lang={extractLanguageFromId(cheatsheet.id)}>
              <div class="overflow-hidden rounded-lg bg-white shadow-md transition-all duration-300 hover:shadow-lg dark:bg-slate-900 h-full flex flex-col">
                <div class="p-6 flex-1 flex flex-col">
                  {/* Difficulty Badge */}
                  {cheatsheet.data.difficulty && (
                    <div class="mb-3">
                      <span
                        class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                          cheatsheet.data.difficulty === 'beginner'
                            ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100'
                            : cheatsheet.data.difficulty === 'intermediate'
                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100'
                              : 'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'
                        }`}
                      >
                        {t(`pages.cheatsheets.difficulty.${cheatsheet.data.difficulty}`)}
                      </span>
                    </div>
                  )}

                  {/* Title and Topic */}
                  <h3 class="mb-2 text-lg font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400">
                    <a href={`/cheatsheets/${cheatsheet.data.slug || cheatsheet.id}`} class="hover:underline">
                      {cheatsheet.data.title}
                    </a>
                  </h3>

                  {cheatsheet.data.topic && (
                    <p class="text-sm text-blue-600 dark:text-blue-400 mb-2">{cheatsheet.data.topic}</p>
                  )}

                  {/* Description */}
                  {cheatsheet.data.description && (
                    <p class="mb-4 text-sm text-gray-600 dark:text-gray-400 line-clamp-3">
                      {cheatsheet.data.description}
                    </p>
                  )}

                  {/* Meta Info */}
                  <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
                    <div class="flex items-center space-x-2">
                      {cheatsheet.data.format && <span class="uppercase font-medium">{cheatsheet.data.format}</span>}
                    </div>

                    {cheatsheet.data.pdfUrl && (
                      <a
                        href={cheatsheet.data.pdfUrl}
                        class="inline-flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 font-medium"
                        download
                        title="Download PDF"
                      >
                        <Icon name="tabler:file-type-pdf" class="w-4 h-4" />
                      </a>
                    )}
                  </div>

                  {/* Tags */}
                  {cheatsheet.data.tags && cheatsheet.data.tags.length > 0 && (
                    <div class="mt-3 flex flex-wrap gap-1">
                      {cheatsheet.data.tags.slice(0, 3).map((tag) => (
                        <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded dark:bg-gray-700 dark:text-gray-400">
                          {tag}
                        </span>
                      ))}
                      {cheatsheet.data.tags.length > 3 && (
                        <span class="px-2 py-1 text-xs text-gray-500 dark:text-gray-400">
                          +{cheatsheet.data.tags.length - 3} more
                        </span>
                      )}
                    </div>
                  )}
                </div>
              </div>
            </article>
          ))}
        </div>
      </section>
    )
  }

  {/* All Cheatsheets */}
  <section class="px-4 py-16 mx-auto max-w-7xl lg:px-8 lg:py-20">
    <div class="mb-12 text-center">
      <h2
        class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl"
        data-i18n="pages.cheatsheets.allCheatsheets"
      >
        {featuredCheatsheets.length > 0 ? t('pages.cheatsheets.allCheatsheets') : t('pages.cheatsheets.title')}
      </h2>
      <p class="mt-4 text-lg text-gray-600 dark:text-gray-300" data-i18n="pages.cheatsheets.allCheatsheetsDesc">
        {t('pages.cheatsheets.allCheatsheetsDesc')}
      </p>
    </div>

    {
      sortedCheatsheets.length === 0 ? (
        <div class="text-center py-12">
          <div class="mx-auto w-24 h-24 mb-6 text-gray-400">
            <svg fill="currentColor" viewBox="0 0 24 24">
              <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z" />
            </svg>
          </div>
          <h3
            class="text-xl font-medium text-gray-900 dark:text-white mb-2"
            data-i18n="pages.cheatsheets.noCheatSheetsYet"
          >
            {t('pages.cheatsheets.noCheatSheetsYet')}
          </h3>
          <p class="text-gray-600 dark:text-gray-400 mb-6" data-i18n="pages.cheatsheets.startCreating">
            {t('pages.cheatsheets.startCreating')}
          </p>
          <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-4 text-left max-w-lg mx-auto">
            <code class="text-sm text-gray-800 dark:text-gray-200">
              postsurfing your-cheatsheet.html --type cheatsheets
            </code>
          </div>
        </div>
      ) : (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {sortedCheatsheets.map((cheatsheet) => (
            <article class="group" data-lang={extractLanguageFromId(cheatsheet.id)}>
              <div class="p-6 bg-white rounded-lg shadow-md transition-all duration-300 hover:shadow-lg dark:bg-slate-900 h-full flex flex-col">
                <div class="flex-1">
                  {/* Header */}
                  <div class="flex items-center space-x-3 mb-2">
                    {cheatsheet.data.difficulty && (
                      <span
                        class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                          cheatsheet.data.difficulty === 'beginner'
                            ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100'
                            : cheatsheet.data.difficulty === 'intermediate'
                              ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100'
                              : 'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'
                        }`}
                      >
                        {t(`pages.cheatsheets.difficulty.${cheatsheet.data.difficulty}`)}
                      </span>
                    )}

                    {cheatsheet.data.format && (
                      <span class="inline-flex items-center px-2 py-0.5 rounded text-xs bg-blue-100 text-blue-800 dark:bg-blue-800 dark:text-blue-100 uppercase font-medium">
                        {t(`pages.cheatsheets.format.${cheatsheet.data.format}`)}
                      </span>
                    )}
                  </div>

                  {/* Title and Topic */}
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 mb-2">
                    <a href={`/cheatsheets/${cheatsheet.data.slug || cheatsheet.id}`} class="hover:underline">
                      {cheatsheet.data.title}
                    </a>
                  </h3>

                  {cheatsheet.data.topic && (
                    <p class="text-blue-600 dark:text-blue-400 font-medium mb-2">{cheatsheet.data.topic}</p>
                  )}

                  {/* Description */}
                  {cheatsheet.data.description && (
                    <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-2">{cheatsheet.data.description}</p>
                  )}

                  {/* Tags */}
                  {cheatsheet.data.tags && cheatsheet.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-1 mb-4">
                      {cheatsheet.data.tags.slice(0, 3).map((tag) => (
                        <span class="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded dark:bg-gray-700 dark:text-gray-400">
                          {tag}
                        </span>
                      ))}
                      {cheatsheet.data.tags.length > 3 && (
                        <span class="px-2 py-1 text-xs text-gray-500 dark:text-gray-400">
                          +{cheatsheet.data.tags.length - 3} more
                        </span>
                      )}
                    </div>
                  )}

                  {/* Meta Info */}
                  <div class="flex items-center justify-between text-sm text-gray-500 dark:text-gray-400">
                    <div class="flex items-center space-x-4">
                      {cheatsheet.data.publishDate && (
                        <time datetime={cheatsheet.data.publishDate.toISOString()}>
                          {cheatsheet.data.publishDate.toLocaleDateString()}
                        </time>
                      )}
                      {cheatsheet.data.generatedBy && (
                        <span>
                          {t('pages.cheatsheets.generatedBy')} {cheatsheet.data.generatedBy}
                        </span>
                      )}
                    </div>

                    {cheatsheet.data.pdfUrl && (
                      <a
                        href={cheatsheet.data.pdfUrl}
                        class="inline-flex items-center text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300 font-medium"
                        download
                        title="Download PDF"
                      >
                        <Icon name="tabler:file-type-pdf" class="w-4 h-4" />
                      </a>
                    )}
                  </div>
                </div>
              </div>
            </article>
          ))}
        </div>
      )
    }
  </section>
</Layout>
