---
import { twMerge } from 'tailwind-merge';

interface Props {
  class?: string;
  size?: 'sm' | 'md' | 'lg';
  variant?: 'spinner' | 'dots' | 'pulse';
  color?: 'blue' | 'gray' | 'white' | 'green' | 'red';
  text?: string;
  showText?: boolean;
  overlay?: boolean;
}

const {
  class: className = '',
  size = 'md',
  variant = 'spinner',
  color = 'blue',
  text = 'Loading...',
  showText = true,
  overlay = false,
  ...rest
} = Astro.props;

// Size configurations
const sizeConfig = {
  sm: {
    spinner: 'h-4 w-4',
    dots: 'w-8 h-2',
    container: 'p-2',
    text: 'text-xs',
  },
  md: {
    spinner: 'h-5 w-5',
    dots: 'w-10 h-2.5',
    container: 'p-3',
    text: 'text-sm',
  },
  lg: {
    spinner: 'h-6 w-6',
    dots: 'w-12 h-3',
    container: 'p-4',
    text: 'text-base',
  },
};

// Color configurations
const colorConfig = {
  blue: {
    spinner: 'border-blue-600',
    dots: 'bg-blue-600',
    pulse: 'bg-blue-600',
    text: 'text-blue-600',
    bg: 'bg-blue-50',
    border: 'border-blue-200',
  },
  gray: {
    spinner: 'border-gray-600',
    dots: 'bg-gray-600',
    pulse: 'bg-gray-600',
    text: 'text-gray-600',
    bg: 'bg-gray-50',
    border: 'border-gray-200',
  },
  white: {
    spinner: 'border-white',
    dots: 'bg-white',
    pulse: 'bg-white',
    text: 'text-white',
    bg: 'bg-white/10',
    border: 'border-white/20',
  },
  green: {
    spinner: 'border-green-600',
    dots: 'bg-green-600',
    pulse: 'bg-green-600',
    text: 'text-green-600',
    bg: 'bg-green-50',
    border: 'border-green-200',
  },
  red: {
    spinner: 'border-red-600',
    dots: 'bg-red-600',
    pulse: 'bg-red-600',
    text: 'text-red-600',
    bg: 'bg-red-50',
    border: 'border-red-200',
  },
};

const sizes = sizeConfig[size];
const colors = colorConfig[color];

// Generate unique ID for this component instance
const loaderId = `loader-${Math.random().toString(36).substring(2, 11)}`;
---

<div
  id={loaderId}
  class={`flex items-center justify-center ${overlay ? 'fixed inset-0 bg-black/20 backdrop-blur-sm z-50' : ''} ${
    variant !== 'spinner' || showText ? 'flex-col' : ''
  } ${variant === 'spinner' && showText ? 'flex-row' : ''} ${className}`}
  {...rest}
>
  <!-- Spinner Variant -->
  {
    variant === 'spinner' && (
      <>
        <div class={twMerge('animate-spin rounded-full border-2 border-transparent border-t-current', sizes.spinner)} />
        {showText && text && <span class={twMerge('ml-2 font-medium', colors.text, sizes.text)}>{text}</span>}
      </>
    )
  }

  <!-- Dots Variant -->
  {
    variant === 'dots' && (
      <>
        <div class={twMerge('flex space-x-1', sizes.dots)}>
          <div class={twMerge('animate-bounce rounded-full', colors.dots, 'w-2 h-2')} style="animation-delay: 0ms;" />
          <div class={twMerge('animate-bounce rounded-full', colors.dots, 'w-2 h-2')} style="animation-delay: 150ms;" />
          <div class={twMerge('animate-bounce rounded-full', colors.dots, 'w-2 h-2')} style="animation-delay: 300ms;" />
        </div>
        {showText && text && <span class={twMerge('mt-2 font-medium', colors.text, sizes.text)}>{text}</span>}
      </>
    )
  }

  <!-- Pulse Variant -->
  {
    variant === 'pulse' && (
      <>
        <div class={twMerge('animate-pulse rounded-full', colors.pulse, sizes.spinner)} />
        {showText && text && <span class={twMerge('ml-2 font-medium', colors.text, sizes.text)}>{text}</span>}
      </>
    )
  }
</div>

<style>
  /* Custom animations for better loading experience */
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes bounce {
    0%,
    80%,
    100% {
      transform: scale(0);
    }
    40% {
      transform: scale(1);
    }
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  .animate-bounce {
    animation: bounce 1.4s infinite ease-in-out both;
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Dark mode support */
  .dark .bg-blue-50 {
    background-color: rgba(37, 99, 235, 0.1);
  }

  .dark .bg-gray-50 {
    background-color: rgba(107, 114, 128, 0.1);
  }

  .dark .bg-green-50 {
    background-color: rgba(34, 197, 94, 0.1);
  }

  .dark .bg-red-50 {
    background-color: rgba(239, 68, 68, 0.1);
  }

  .dark .border-blue-200 {
    border-color: rgba(37, 99, 235, 0.3);
  }

  .dark .border-gray-200 {
    border-color: rgba(107, 114, 128, 0.3);
  }

  .dark .border-green-200 {
    border-color: rgba(34, 197, 94, 0.3);
  }

  .dark .border-red-200 {
    border-color: rgba(239, 68, 68, 0.3);
  }
</style>
