---
import merge from 'lodash.merge';
import { AstroSeo } from '@astrolib/seo';
import { getRelativeLocaleUrl } from 'astro:i18n';

import type { Props as AstroSeoProps } from '@astrolib/seo';

import { SITE, METADATA, I18N } from 'astrowind:config';
import type { MetaData } from '~/types';
import { getCanonical } from '~/utils/permalinks';

import { adaptOpenGraphImages } from '~/utils/images';

export interface Props extends MetaData {
  dontUseTitleTemplate?: boolean;
}

const {
  title,
  ignoreTitleTemplate = false,
  canonical = String(getCanonical(String(Astro.url.pathname))),
  robots = {},
  description,
  openGraph = {},
  twitter = {},
} = Astro.props;

// If we have a custom title from markdown metadata, use the format "Surfing -- Custom Title"
// But only add "Surfing -- " if the title doesn't already start with it
const finalTitle = title && !title.startsWith('Surfing -- ') ? `Surfing -- ${title}` : (title || undefined);

const seoProps: AstroSeoProps = merge(
  {
    title: '',
    titleTemplate: '%s',
    canonical: canonical,
    noindex: true,
    nofollow: true,
    description: undefined,
    openGraph: {
      url: canonical,
      site_name: SITE?.name,
      images: [],
      locale: I18N?.language || 'en',
      type: 'website',
    },
    twitter: {
      cardType: openGraph?.images?.length ? 'summary_large_image' : 'summary',
    },
    extend: {
      link:
        I18N && I18N.locales && I18N.defaultLocale
          ? [
              ...I18N.locales.map((locale: string) => ({
                rel: 'alternate',
                hreflang: locale,
                href: new URL(getRelativeLocaleUrl(locale, Astro.url.pathname), Astro.site).href,
              })),
              {
                rel: 'alternate',
                hreflang: 'x-default',
                href: new URL(getRelativeLocaleUrl(I18N.defaultLocale, Astro.url.pathname), Astro.site).href,
              },
            ]
          : [],
    },
  },
  {
    title: METADATA?.title?.default,
    titleTemplate: METADATA?.title?.template,
    noindex: typeof METADATA?.robots?.index !== 'undefined' ? !METADATA.robots.index : undefined,
    nofollow: typeof METADATA?.robots?.follow !== 'undefined' ? !METADATA.robots.follow : undefined,
    description: METADATA?.description,
    openGraph: METADATA?.openGraph,
    twitter: METADATA?.twitter,
  },
  {
    title: finalTitle || title || '',
    titleTemplate: finalTitle ? '%s' : ignoreTitleTemplate ? '%s' : undefined,
    canonical: canonical,
    noindex: typeof robots?.index !== 'undefined' ? !robots.index : undefined,
    nofollow: typeof robots?.follow !== 'undefined' ? !robots.follow : undefined,
    description: description,
    openGraph: {
      url: canonical,
      ...openGraph,
      ...(finalTitle && { title: finalTitle }), // Use finalTitle for OG title if we have it
    },
    twitter: {
      ...twitter,
      ...(finalTitle && { title: finalTitle }), // Use finalTitle for Twitter title if we have it
    },
  }
);
---

<AstroSeo {...{ ...seoProps, openGraph: await adaptOpenGraphImages(seoProps?.openGraph, Astro.site) }} />
